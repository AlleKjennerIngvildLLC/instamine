// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: command.proto

#ifndef PROTOBUF_command_2eproto__INCLUDED
#define PROTOBUF_command_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace cauchy {
class CommandRequest;
class CommandRequestDefaultTypeInternal;
extern CommandRequestDefaultTypeInternal _CommandRequest_default_instance_;
class CommandStatusReply;
class CommandStatusReplyDefaultTypeInternal;
extern CommandStatusReplyDefaultTypeInternal _CommandStatusReply_default_instance_;
class Config;
class ConfigDefaultTypeInternal;
extern ConfigDefaultTypeInternal _Config_default_instance_;
class SystemStatusReply;
class SystemStatusReplyDefaultTypeInternal;
extern SystemStatusReplyDefaultTypeInternal _SystemStatusReply_default_instance_;
class SystemStatusRequest;
class SystemStatusRequestDefaultTypeInternal;
extern SystemStatusRequestDefaultTypeInternal _SystemStatusRequest_default_instance_;
}  // namespace cauchy

namespace cauchy {

namespace protobuf_command_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_command_2eproto

enum CommandRequest_Miner {
  CommandRequest_Miner_XMR_CPU = 0,
  CommandRequest_Miner_XMR_CUDA = 1,
  CommandRequest_Miner_XMR_AMD = 2,
  CommandRequest_Miner_ETH = 3,
  CommandRequest_Miner_CommandRequest_Miner_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CommandRequest_Miner_CommandRequest_Miner_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CommandRequest_Miner_IsValid(int value);
const CommandRequest_Miner CommandRequest_Miner_Miner_MIN = CommandRequest_Miner_XMR_CPU;
const CommandRequest_Miner CommandRequest_Miner_Miner_MAX = CommandRequest_Miner_ETH;
const int CommandRequest_Miner_Miner_ARRAYSIZE = CommandRequest_Miner_Miner_MAX + 1;

const ::google::protobuf::EnumDescriptor* CommandRequest_Miner_descriptor();
inline const ::std::string& CommandRequest_Miner_Name(CommandRequest_Miner value) {
  return ::google::protobuf::internal::NameOfEnum(
    CommandRequest_Miner_descriptor(), value);
}
inline bool CommandRequest_Miner_Parse(
    const ::std::string& name, CommandRequest_Miner* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CommandRequest_Miner>(
    CommandRequest_Miner_descriptor(), name, value);
}
enum SystemStatusReply_Miner {
  SystemStatusReply_Miner_XMR_CPU = 0,
  SystemStatusReply_Miner_XMR_CUDA = 1,
  SystemStatusReply_Miner_XMR_AMD = 2,
  SystemStatusReply_Miner_ETH = 3,
  SystemStatusReply_Miner_SystemStatusReply_Miner_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SystemStatusReply_Miner_SystemStatusReply_Miner_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SystemStatusReply_Miner_IsValid(int value);
const SystemStatusReply_Miner SystemStatusReply_Miner_Miner_MIN = SystemStatusReply_Miner_XMR_CPU;
const SystemStatusReply_Miner SystemStatusReply_Miner_Miner_MAX = SystemStatusReply_Miner_ETH;
const int SystemStatusReply_Miner_Miner_ARRAYSIZE = SystemStatusReply_Miner_Miner_MAX + 1;

const ::google::protobuf::EnumDescriptor* SystemStatusReply_Miner_descriptor();
inline const ::std::string& SystemStatusReply_Miner_Name(SystemStatusReply_Miner value) {
  return ::google::protobuf::internal::NameOfEnum(
    SystemStatusReply_Miner_descriptor(), value);
}
inline bool SystemStatusReply_Miner_Parse(
    const ::std::string& name, SystemStatusReply_Miner* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SystemStatusReply_Miner>(
    SystemStatusReply_Miner_descriptor(), name, value);
}
// ===================================================================

class CommandRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:cauchy.CommandRequest) */ {
 public:
  CommandRequest();
  virtual ~CommandRequest();

  CommandRequest(const CommandRequest& from);

  inline CommandRequest& operator=(const CommandRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CommandRequest& default_instance();

  static inline const CommandRequest* internal_default_instance() {
    return reinterpret_cast<const CommandRequest*>(
               &_CommandRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(CommandRequest* other);

  // implements Message ----------------------------------------------

  inline CommandRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CommandRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CommandRequest& from);
  void MergeFrom(const CommandRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CommandRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CommandRequest_Miner Miner;
  static const Miner XMR_CPU =
    CommandRequest_Miner_XMR_CPU;
  static const Miner XMR_CUDA =
    CommandRequest_Miner_XMR_CUDA;
  static const Miner XMR_AMD =
    CommandRequest_Miner_XMR_AMD;
  static const Miner ETH =
    CommandRequest_Miner_ETH;
  static inline bool Miner_IsValid(int value) {
    return CommandRequest_Miner_IsValid(value);
  }
  static const Miner Miner_MIN =
    CommandRequest_Miner_Miner_MIN;
  static const Miner Miner_MAX =
    CommandRequest_Miner_Miner_MAX;
  static const int Miner_ARRAYSIZE =
    CommandRequest_Miner_Miner_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Miner_descriptor() {
    return CommandRequest_Miner_descriptor();
  }
  static inline const ::std::string& Miner_Name(Miner value) {
    return CommandRequest_Miner_Name(value);
  }
  static inline bool Miner_Parse(const ::std::string& name,
      Miner* value) {
    return CommandRequest_Miner_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .cauchy.Config config = 2;
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 2;
  const ::cauchy::Config& config() const;
  ::cauchy::Config* mutable_config();
  ::cauchy::Config* release_config();
  void set_allocated_config(::cauchy::Config* config);

  // .cauchy.CommandRequest.Miner miner = 1;
  void clear_miner();
  static const int kMinerFieldNumber = 1;
  ::cauchy::CommandRequest_Miner miner() const;
  void set_miner(::cauchy::CommandRequest_Miner value);

  // @@protoc_insertion_point(class_scope:cauchy.CommandRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::cauchy::Config* config_;
  int miner_;
  mutable int _cached_size_;
  friend struct protobuf_command_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CommandStatusReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:cauchy.CommandStatusReply) */ {
 public:
  CommandStatusReply();
  virtual ~CommandStatusReply();

  CommandStatusReply(const CommandStatusReply& from);

  inline CommandStatusReply& operator=(const CommandStatusReply& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CommandStatusReply& default_instance();

  static inline const CommandStatusReply* internal_default_instance() {
    return reinterpret_cast<const CommandStatusReply*>(
               &_CommandStatusReply_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(CommandStatusReply* other);

  // implements Message ----------------------------------------------

  inline CommandStatusReply* New() const PROTOBUF_FINAL { return New(NULL); }

  CommandStatusReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CommandStatusReply& from);
  void MergeFrom(const CommandStatusReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CommandStatusReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string message = 1;
  void clear_message();
  static const int kMessageFieldNumber = 1;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // @@protoc_insertion_point(class_scope:cauchy.CommandStatusReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  mutable int _cached_size_;
  friend struct protobuf_command_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:cauchy.Config) */ {
 public:
  Config();
  virtual ~Config();

  Config(const Config& from);

  inline Config& operator=(const Config& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Config& default_instance();

  static inline const Config* internal_default_instance() {
    return reinterpret_cast<const Config*>(
               &_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(Config* other);

  // implements Message ----------------------------------------------

  inline Config* New() const PROTOBUF_FINAL { return New(NULL); }

  Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Config& from);
  void MergeFrom(const Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string config_str = 1;
  void clear_config_str();
  static const int kConfigStrFieldNumber = 1;
  const ::std::string& config_str() const;
  void set_config_str(const ::std::string& value);
  #if LANG_CXX11
  void set_config_str(::std::string&& value);
  #endif
  void set_config_str(const char* value);
  void set_config_str(const char* value, size_t size);
  ::std::string* mutable_config_str();
  ::std::string* release_config_str();
  void set_allocated_config_str(::std::string* config_str);

  // @@protoc_insertion_point(class_scope:cauchy.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr config_str_;
  mutable int _cached_size_;
  friend struct protobuf_command_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SystemStatusRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:cauchy.SystemStatusRequest) */ {
 public:
  SystemStatusRequest();
  virtual ~SystemStatusRequest();

  SystemStatusRequest(const SystemStatusRequest& from);

  inline SystemStatusRequest& operator=(const SystemStatusRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SystemStatusRequest& default_instance();

  static inline const SystemStatusRequest* internal_default_instance() {
    return reinterpret_cast<const SystemStatusRequest*>(
               &_SystemStatusRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(SystemStatusRequest* other);

  // implements Message ----------------------------------------------

  inline SystemStatusRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  SystemStatusRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SystemStatusRequest& from);
  void MergeFrom(const SystemStatusRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SystemStatusRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:cauchy.SystemStatusRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 id_;
  mutable int _cached_size_;
  friend struct protobuf_command_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SystemStatusReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:cauchy.SystemStatusReply) */ {
 public:
  SystemStatusReply();
  virtual ~SystemStatusReply();

  SystemStatusReply(const SystemStatusReply& from);

  inline SystemStatusReply& operator=(const SystemStatusReply& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SystemStatusReply& default_instance();

  static inline const SystemStatusReply* internal_default_instance() {
    return reinterpret_cast<const SystemStatusReply*>(
               &_SystemStatusReply_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(SystemStatusReply* other);

  // implements Message ----------------------------------------------

  inline SystemStatusReply* New() const PROTOBUF_FINAL { return New(NULL); }

  SystemStatusReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SystemStatusReply& from);
  void MergeFrom(const SystemStatusReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SystemStatusReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SystemStatusReply_Miner Miner;
  static const Miner XMR_CPU =
    SystemStatusReply_Miner_XMR_CPU;
  static const Miner XMR_CUDA =
    SystemStatusReply_Miner_XMR_CUDA;
  static const Miner XMR_AMD =
    SystemStatusReply_Miner_XMR_AMD;
  static const Miner ETH =
    SystemStatusReply_Miner_ETH;
  static inline bool Miner_IsValid(int value) {
    return SystemStatusReply_Miner_IsValid(value);
  }
  static const Miner Miner_MIN =
    SystemStatusReply_Miner_Miner_MIN;
  static const Miner Miner_MAX =
    SystemStatusReply_Miner_Miner_MAX;
  static const int Miner_ARRAYSIZE =
    SystemStatusReply_Miner_Miner_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Miner_descriptor() {
    return SystemStatusReply_Miner_descriptor();
  }
  static inline const ::std::string& Miner_Name(Miner value) {
    return SystemStatusReply_Miner_Name(value);
  }
  static inline bool Miner_Parse(const ::std::string& name,
      Miner* value) {
    return SystemStatusReply_Miner_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // bool running = 1;
  void clear_running();
  static const int kRunningFieldNumber = 1;
  bool running() const;
  void set_running(bool value);

  // .cauchy.SystemStatusReply.Miner miner = 2;
  void clear_miner();
  static const int kMinerFieldNumber = 2;
  ::cauchy::SystemStatusReply_Miner miner() const;
  void set_miner(::cauchy::SystemStatusReply_Miner value);

  // @@protoc_insertion_point(class_scope:cauchy.SystemStatusReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool running_;
  int miner_;
  mutable int _cached_size_;
  friend struct protobuf_command_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// CommandRequest

// .cauchy.CommandRequest.Miner miner = 1;
inline void CommandRequest::clear_miner() {
  miner_ = 0;
}
inline ::cauchy::CommandRequest_Miner CommandRequest::miner() const {
  // @@protoc_insertion_point(field_get:cauchy.CommandRequest.miner)
  return static_cast< ::cauchy::CommandRequest_Miner >(miner_);
}
inline void CommandRequest::set_miner(::cauchy::CommandRequest_Miner value) {
  
  miner_ = value;
  // @@protoc_insertion_point(field_set:cauchy.CommandRequest.miner)
}

// .cauchy.Config config = 2;
inline bool CommandRequest::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void CommandRequest::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) delete config_;
  config_ = NULL;
}
inline const ::cauchy::Config& CommandRequest::config() const {
  // @@protoc_insertion_point(field_get:cauchy.CommandRequest.config)
  return config_ != NULL ? *config_
                         : *::cauchy::Config::internal_default_instance();
}
inline ::cauchy::Config* CommandRequest::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::cauchy::Config;
  }
  // @@protoc_insertion_point(field_mutable:cauchy.CommandRequest.config)
  return config_;
}
inline ::cauchy::Config* CommandRequest::release_config() {
  // @@protoc_insertion_point(field_release:cauchy.CommandRequest.config)
  
  ::cauchy::Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline void CommandRequest::set_allocated_config(::cauchy::Config* config) {
  delete config_;
  config_ = config;
  if (config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:cauchy.CommandRequest.config)
}

// -------------------------------------------------------------------

// CommandStatusReply

// string message = 1;
inline void CommandStatusReply::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CommandStatusReply::message() const {
  // @@protoc_insertion_point(field_get:cauchy.CommandStatusReply.message)
  return message_.GetNoArena();
}
inline void CommandStatusReply::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cauchy.CommandStatusReply.message)
}
#if LANG_CXX11
inline void CommandStatusReply::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:cauchy.CommandStatusReply.message)
}
#endif
inline void CommandStatusReply::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cauchy.CommandStatusReply.message)
}
inline void CommandStatusReply::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cauchy.CommandStatusReply.message)
}
inline ::std::string* CommandStatusReply::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:cauchy.CommandStatusReply.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CommandStatusReply::release_message() {
  // @@protoc_insertion_point(field_release:cauchy.CommandStatusReply.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CommandStatusReply::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:cauchy.CommandStatusReply.message)
}

// -------------------------------------------------------------------

// Config

// string config_str = 1;
inline void Config::clear_config_str() {
  config_str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Config::config_str() const {
  // @@protoc_insertion_point(field_get:cauchy.Config.config_str)
  return config_str_.GetNoArena();
}
inline void Config::set_config_str(const ::std::string& value) {
  
  config_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cauchy.Config.config_str)
}
#if LANG_CXX11
inline void Config::set_config_str(::std::string&& value) {
  
  config_str_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:cauchy.Config.config_str)
}
#endif
inline void Config::set_config_str(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  config_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cauchy.Config.config_str)
}
inline void Config::set_config_str(const char* value, size_t size) {
  
  config_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cauchy.Config.config_str)
}
inline ::std::string* Config::mutable_config_str() {
  
  // @@protoc_insertion_point(field_mutable:cauchy.Config.config_str)
  return config_str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Config::release_config_str() {
  // @@protoc_insertion_point(field_release:cauchy.Config.config_str)
  
  return config_str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Config::set_allocated_config_str(::std::string* config_str) {
  if (config_str != NULL) {
    
  } else {
    
  }
  config_str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), config_str);
  // @@protoc_insertion_point(field_set_allocated:cauchy.Config.config_str)
}

// -------------------------------------------------------------------

// SystemStatusRequest

// int32 id = 1;
inline void SystemStatusRequest::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 SystemStatusRequest::id() const {
  // @@protoc_insertion_point(field_get:cauchy.SystemStatusRequest.id)
  return id_;
}
inline void SystemStatusRequest::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:cauchy.SystemStatusRequest.id)
}

// -------------------------------------------------------------------

// SystemStatusReply

// bool running = 1;
inline void SystemStatusReply::clear_running() {
  running_ = false;
}
inline bool SystemStatusReply::running() const {
  // @@protoc_insertion_point(field_get:cauchy.SystemStatusReply.running)
  return running_;
}
inline void SystemStatusReply::set_running(bool value) {
  
  running_ = value;
  // @@protoc_insertion_point(field_set:cauchy.SystemStatusReply.running)
}

// .cauchy.SystemStatusReply.Miner miner = 2;
inline void SystemStatusReply::clear_miner() {
  miner_ = 0;
}
inline ::cauchy::SystemStatusReply_Miner SystemStatusReply::miner() const {
  // @@protoc_insertion_point(field_get:cauchy.SystemStatusReply.miner)
  return static_cast< ::cauchy::SystemStatusReply_Miner >(miner_);
}
inline void SystemStatusReply::set_miner(::cauchy::SystemStatusReply_Miner value) {
  
  miner_ = value;
  // @@protoc_insertion_point(field_set:cauchy.SystemStatusReply.miner)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace cauchy

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::cauchy::CommandRequest_Miner> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::cauchy::CommandRequest_Miner>() {
  return ::cauchy::CommandRequest_Miner_descriptor();
}
template <> struct is_proto_enum< ::cauchy::SystemStatusReply_Miner> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::cauchy::SystemStatusReply_Miner>() {
  return ::cauchy::SystemStatusReply_Miner_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_command_2eproto__INCLUDED
