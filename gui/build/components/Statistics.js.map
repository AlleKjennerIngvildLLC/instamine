{"version":3,"sources":["../../app/components/Statistics.js"],"names":["Statistics","state","hideEvents","statistics","props","miner","ping","sparklines","n_threads","poolAddress","totalHashrate","lastRate","undefined","hashrates","totalRates","map","sum","entry","mean","toFixed","last","eventTable","eventHistory","marginTop","paddingLeft","paddingTop","overflowX","marginBottom","background","setState"],"mappings":"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","file":"Statistics.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {Button, Text, PanelHeader, Truncate, Heading} from 'rebass';\r\nimport _ from 'lodash';\r\n\r\nimport Graph from './Graph';\r\nimport EventTable from './EventTable';\r\n\r\nexport default class Statistics extends Component {\r\n\r\n    state = {\r\n        hideEvents: false\r\n    }\r\n\r\n    render() {\r\n\r\n        let statistics = this.props.miner.statistics;\r\n        let ping = 'N/A';\r\n        let sparklines;\r\n        let n_threads = 'N/A';\r\n        let poolAddress;\r\n        let totalHashrate = 'N/A';\r\n        let lastRate = 'N/A';\r\n\r\n        if (statistics !== undefined) {\r\n\r\n            if (ping !== 0) {\r\n                ping = `${ping} ms`;\r\n            }\r\n\r\n            n_threads = statistics.n_threads;\r\n            poolAddress = statistics.poolAddress;\r\n\r\n            sparklines = <Graph hashrates={this.props.miner.hashrates}/>;\r\n\r\n            let totalRates = _.map(this.props.miner.hashrates, entry => _.sum(entry.hashrates));\r\n\r\n            totalHashrate = _\r\n                .mean(totalRates)\r\n                .toFixed(1);\r\n            lastRate = _\r\n                .last(totalRates)\r\n                .toFixed(1);\r\n\r\n        }\r\n\r\n        let eventTable;\r\n\r\n        if (this.state.hideEvents) {\r\n            eventTable = '';\r\n        } else {\r\n            eventTable = <EventTable events={this.props.miner.eventHistory}/>;\r\n        }\r\n\r\n        return (\r\n\r\n            <div>\r\n                <div className=\"heading\">\r\n                    <div\r\n                        style={{\r\n                        marginTop: '10px'\r\n                    }}\r\n                        className=\"row center-sm\">\r\n                        <div className=\"col-sm-6\">\r\n                            <div className=\"box\">\r\n                                <PanelHeader fontSize={3}>\r\n                                    Miner Statistics\r\n                                </PanelHeader>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div\r\n                    style={{\r\n                    paddingLeft: '15px',\r\n                    paddingTop: '50px',\r\n                    overflowX: 'hidden'\r\n                }}\r\n                    className=\"statistics\">\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-offset-1 col-sm-5\">\r\n                            <div className=\"row\">\r\n                                <Text\r\n                                    style={{\r\n                                    marginBottom: '0px'\r\n                                }}\r\n                                    bold\r\n                                    fontSize={2}>\r\n                                    {`Mean hashrate: ${totalHashrate}`}\r\n                                </Text>\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                                <Text\r\n                                    style={{\r\n                                    marginTop: '0px'\r\n                                }}\r\n                                    bold\r\n                                    fontSize={2}>\r\n                                    {`Latest hashrate: ${lastRate}`}\r\n                                </Text>\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                                <Text\r\n                                    style={{\r\n                                    marginTop: '0px'\r\n                                }}\r\n                                    bold\r\n                                    fontSize={2}>\r\n                                    {`Latency: ${ping}`}\r\n                                </Text>\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                                <Text\r\n                                    style={{\r\n                                    marginTop: '0px'\r\n                                }}\r\n                                    bold\r\n                                    fontSize={2}>\r\n                                    {`Threads: ${n_threads}`}\r\n                                </Text>\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                                <Truncate bold fontSize={2}>\r\n                                    {`Pool: ${poolAddress}`}\r\n                                </Truncate>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-sm-5\">\r\n                            <div className=\"box\">\r\n                                {sparklines}\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div className=\"col-sm-2\"></div>\r\n\r\n                    </div>\r\n\r\n                    <div\r\n                        style={{\r\n                        marginTop: '40px'\r\n                    }}\r\n                        className=\"row\">\r\n                        <div className=\"col-xs-12\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-xs-offset-5 col-xs-5\">\r\n                                    <Button\r\n                                        style={{background: 'gray'}}\r\n                                        onClick={() => {\r\n                                        this.setState({\r\n                                            hideEvents: !this.state.hideEvents\r\n                                        });\r\n                                    }}>\r\n                                        { \r\n                                            (this.state.hideEvents) \r\n                                            ? 'Show events'\r\n                                            : 'Hide events'\r\n                                        }\r\n                                    </Button>\r\n                                </div>\r\n                            </div>\r\n                            <div style={{marginTop: '10px'}} className=\"row\">\r\n                                <div className=\"col-xs-offset-1 col-xs-10\">\r\n                                    {eventTable}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n"]}