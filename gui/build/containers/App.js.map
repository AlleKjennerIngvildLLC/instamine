{"version":3,"sources":["../../app/containers/App.js"],"names":["mapStateToProps","state","miner","notifications","mapDispatchToProps","dispatch","systemStatus","App","props","close","getCurrentWindow","minimize","toggleMaximize","currentWindow","isMaximized","unmaximize","maximize","setState","style","NotificationItem","DefaultStyle","margin","success","color","overflow","children"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAGA;;;;AACA;;;;AACA;;;;;;AAGA,IAAMA,kBAAkB,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AACjC,SAAO,EAAEC,OAAOD,MAAMC,KAAf,EAAsBC,eAAeF,MAAME,aAA3C,EAAP;AACD,CAFD;;AAIA,IAAMC,qBAAqB,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACvC,MAAMH,QAAQ,gDAAiCG,QAAjC,CAAd;AACA,SAAO;AACLC,kBAAc,wBAAM;AAClBJ,YAAMI,YAAN;AACD;AAHI,GAAP;AAKD,CAPD;;IASMC,G;;;AAEJ,eAAYC,KAAZ,EAAmB;AAAA;;AAAA,gIACXA,KADW;;AAAA,UAYnBC,KAZmB,GAYX,YAAM;AACZ,uBACGC,gBADH,GAEGD,KAFH;AAGD,KAhBkB;;AAAA,UAiBnBE,QAjBmB,GAiBR,YAAM;AACf,uBACGD,gBADH,GAEGC,QAFH;AAGD,KArBkB;;AAAA,UAuBnBC,cAvBmB,GAuBF,YAAM;;AAErB,UAAMC,gBAAgB,iBAAOH,gBAAP,EAAtB;AACA,UAAI,MAAKT,KAAL,CAAWa,WAAf,EAA4B;AAC1BD,sBAAcE,UAAd;AACD,OAFD,MAEO;AACLF,sBAAcG,QAAd;AACD;;AAED,YAAKC,QAAL,CAAc;AACZH,qBAAa,CAAC,MAAKb,KAAL,CAAWa;AADb,OAAd;AAGD,KAnCkB;;AAGjB,UAAKb,KAAL,GAAa;AACXa,mBAAa;AADF,KAAb;AAHiB;AAMlB;;;;wCAEmB;AAClB,WAAKN,KAAL,CAAWF,YAAX;AACD;;;6BA2BQ;AAAA,UAECH,aAFD,GAEmB,KAAKK,KAFxB,CAECL,aAFD;;AAIP;;AACA,UAAMe,QAAQ;AACZC,0BAAkB,EAAE;AAClBC,wBAAc,EAAE;AACdC,oBAAQ;AADI,WADE;;AAKhBC,mBAAS,EAAE;AACTC,mBAAO;AADA;AALO;AADN,OAAd;;AAaA,aACE;AAAA;AAAA,UAAU,sBAAV;AACE;AAAA;AAAA,YAAK,WAAU,QAAf;AACE,4DAAQ,UAAU,KAAKZ,QAAvB,EAAiC,OAAO,KAAKF,KAA7C,EAAoD,OAAO,KAAKD,KAAL,CAAWN,KAAtE,GADF;AAEE;AAAA;AAAA,cAAK,OAAO,EAACsB,UAAU,QAAX,EAAZ,EAAkC,WAAU,gBAA5C;AACG,iBAAKhB,KAAL,CAAWiB;AADd,WAFF;AAKE;AAAA;AAAA,cAAQ,WAAU,wBAAlB;AACE;AAAA;AAAA,gBAAI,WAAU,OAAd;AAAA;AAAA;AADF,WALF;AAQE;AACE,2BAAetB,aADjB;AAEE,mBAAOe;AAFT;AARF;AADF,OADF;AAiBD;;;;;kBAGY,6BAAW,yBAAQlB,eAAR,EAAyBI,kBAAzB,EAA6CG,GAA7C,CAAX,C","file":"App.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { remote } from 'electron';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router';\r\nimport { bindActionCreators } from 'redux';\r\nimport { Provider } from 'rebass';\r\nimport Notifications from 'react-notification-system-redux';\r\n\r\n\r\nimport theme from '../theme';\r\nimport Header from '../components/Header';\r\nimport minerActions from '../actions/miner';\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { miner: state.miner, notifications: state.notifications };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  const miner = bindActionCreators(minerActions, dispatch);\r\n  return {\r\n    systemStatus: () => {\r\n      miner.systemStatus();\r\n    },\r\n  };\r\n};\r\n\r\nclass App extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isMaximized: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.systemStatus();\r\n  }\r\n\r\n  close = () => {\r\n    remote\r\n      .getCurrentWindow()\r\n      .close();\r\n  }\r\n  minimize = () => {\r\n    remote\r\n      .getCurrentWindow()\r\n      .minimize();\r\n  }\r\n\r\n  toggleMaximize = () => {\r\n\r\n    const currentWindow = remote.getCurrentWindow();\r\n    if (this.state.isMaximized) {\r\n      currentWindow.unmaximize();\r\n    } else {\r\n      currentWindow.maximize();\r\n    }\r\n\r\n    this.setState({\r\n      isMaximized: !this.state.isMaximized\r\n    });\r\n  };\r\n\r\n  render() {\r\n\r\n    const { notifications } = this.props;\r\n\r\n    //Optional styling\r\n    const style = {\r\n      NotificationItem: { // Override the notification item\r\n        DefaultStyle: { // Applied to every notification, regardless of the notification level\r\n          margin: '10px 5px 2px 1px'\r\n        },\r\n\r\n        success: { // Applied only to the success notification item\r\n          color: 'red'\r\n        }\r\n      }\r\n    };\r\n\r\n\r\n    return (\r\n      <Provider theme={theme}>\r\n        <div className=\"window\">\r\n          <Header minimize={this.minimize} close={this.close} miner={this.props.miner} />\r\n          <div style={{overflow: 'hidden'}} className=\"window-content\">\r\n            {this.props.children}\r\n          </div>\r\n          <footer className=\"toolbar toolbar-footer\">\r\n            <h1 className=\"title\">Instamine</h1>\r\n          </footer>\r\n          <Notifications\r\n            notifications={notifications}\r\n            style={style}\r\n          />\r\n        </div>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));"]}