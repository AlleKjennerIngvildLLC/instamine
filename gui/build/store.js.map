{"version":3,"sources":["../app/store.js"],"names":["configureStore","initialState","routerHistory","router","actionCreators","push","reducers","miner","routing","notifications","sagaMiddleware","middlewares","composeEnhancers","compose_","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","process","env","NODE_ENV","enhancer","rootReducer","store","run","minerSaga"],"mappings":";;;;;;;;;;kBAWwBA,c;;AAXxB;;AACA;;AACA;;AAEA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;;;AAEe,SAASA,cAAT,CAAwBC,YAAxB,EAAsCC,aAAtC,EAAqD;AAClE,MAAMC,SAAS,wCAAiBD,aAAjB,CAAf;;AAEA,MAAME;AAEJC;AAFI,IAAN;;AAKA,MAAMC,WAAW;AACfC,0BADe;AAEfC,4CAFe;AAGfC;AAHe,GAAjB;;AAMA,MAAMC,iBAAiB,0BAAvB;;AAEA,MAAMC,cAAc,uBAAQR,MAAR,EAAgBO,cAAhB,CAApB;;AAEA,MAAME,mBAAoB,YAAM;AAC9B,QAAMC,WAAWC,UAAUA,OAAOC,oCAAlC;AACA,QAAIC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,IAA0CL,QAA9C,EAAwD;AACtD,aAAOA,SAAS,EAACT,8BAAD,EAAT,CAAP;AACD;AACD;AACD,GANwB,EAAzB;;AAQA,MAAMe,WAAWP,iBAAiB,wCAAmBD,WAAnB,CAAjB,EAAkD,kCAAlD,CAAjB;AACA,MAAMS,cAAc,4BAAgBd,QAAhB,CAApB;;AAEA,MAAMe,QAAQ,wBAAYD,WAAZ,EAAyBnB,YAAzB,EAAuCkB,QAAvC,CAAd;AACAT,iBAAeY,GAAf,CAAmB,gBAAaC,SAAhC;;AAEA,SAAOF,KAAP;AACD","file":"store.js","sourcesContent":["import {createStore, applyMiddleware, combineReducers, compose} from 'redux';\r\nimport {routerMiddleware, routerReducer as routing, push} from 'react-router-redux';\r\nimport {reducer as notifications} from 'react-notification-system-redux';\r\n\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport persistState from 'redux-localstorage';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport miner from './reducers/miner';\r\nimport minerActions from './actions/miner';\r\n\r\nexport default function configureStore(initialState, routerHistory) {\r\n  const router = routerMiddleware(routerHistory);\r\n\r\n  const actionCreators = {\r\n    ...minerActions,\r\n    push\r\n  };\r\n\r\n  const reducers = {\r\n    miner,\r\n    routing,\r\n    notifications\r\n  };\r\n\r\n  const sagaMiddleware = createSagaMiddleware();\r\n\r\n  const middlewares = [thunk, router, sagaMiddleware];\r\n\r\n  const composeEnhancers = (() => {\r\n    const compose_ = window && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\r\n    if (process.env.NODE_ENV === 'development' && compose_) {\r\n      return compose_({actionCreators});\r\n    }\r\n    return compose;\r\n  })();\r\n\r\n  const enhancer = composeEnhancers(applyMiddleware(...middlewares), persistState());\r\n  const rootReducer = combineReducers(reducers);\r\n\r\n  const store = createStore(rootReducer, initialState, enhancer);\r\n  sagaMiddleware.run(minerActions.minerSaga);\r\n\r\n  return store;\r\n}\r\n"]}