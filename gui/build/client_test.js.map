{"version":3,"sources":["../app/client_test.js"],"names":["client","getMiningStatus","event","timestamp","getTimestamp","undefined","console","log","toObject","newState","state","main","config_str","fs","readFileSync","startMiner","test","require","Event","StatusRequest","sleep","setTimeout","resolve","ms","hashrates"],"mappings":";;;;;;;;;;;;;;;;;;;0EAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAG0BA,OAAOC,eAAP,EAH1B;;AAAA;AAGYC,6BAHZ;AAKYC,iCALZ,GAKwBD,MAAME,YAAN,EALxB;AAMQ;AACA;AACA;;AAEA;;;AAGA,4BAAID,cAAcE,SAAlB,EAA6B;;AAEzBC,oCAAQC,GAAR,CAAYL,MAAMM,QAAN,EAAZ;AACIC,oCAHqB,GAGV,qBAAYP,KAAZ,EAAmBQ,KAAnB,CAHU;;AAIzBA,+DAAYA,KAAZ,EAAsBD,QAAtB;AACH;AAlBT;AAAA;;AAAA;AAAA;AAAA;;AAqBQH,gCAAQC,GAAR;;AArBR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAeI,I;;;;;;2EA0Bf;AAAA;AAAA;AAAA;AAAA;AAAA;AAGQC,kCAHR,GAGqBC,GAAGC,YAAH,CAAgB,kBAAhB,EAAoC,MAApC,CAHrB;;;AAKId,+BAAOe,UAAP,CAAkBH,UAAlB;AACA;;AANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAeI,I;;;;;AAxCf;;;;AACA;;;;;;AAEA,IAAMH,KAAKI,QAAQ,IAAR,CAAX;;eACiCA,QAAQ,mBAAR,C;IAAzBC,K,YAAAA,K;IAAOC,a,YAAAA,a;;AAEf,IAAMC,QAAQ,SAARA,KAAQ;AAAA,WAAM,sBAAY;AAAA,eAAWC,WAAWC,OAAX,EAAoBC,EAApB,CAAX;AAAA,KAAZ,CAAN;AAAA,CAAd;;AAEA,IAAIvB,SAAS,qBAAb;;AAGA,IAAIU,QAAQ,EAACc,WAAW,EAAZ,EAAZ;;AAuCAR","file":"client_test.js","sourcesContent":["import MinerClient from './miner';\r\nimport handleReply from './reducers/reply';\r\n\r\nconst fs = require('fs');\r\nconst { Event, StatusRequest } = require('./rpc/messages_pb');\r\n\r\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\r\n\r\nvar client = new MinerClient();\r\n\r\n\r\nlet state = {hashrates: []}\r\n\r\n\r\nasync function main() {\r\n    try {\r\n\r\n        let event = await client.getMiningStatus();\r\n        \r\n        let timestamp = event.getTimestamp();\r\n        // console.log(\r\n        //     event.getTypeCase() == Event.TypeCase['REPLY']\r\n        // );\r\n\r\n        // console.log(event.toObject());\r\n\r\n\r\n        if (timestamp !== undefined) {\r\n\r\n            console.log(event.toObject());\r\n            let newState = handleReply(event, state)\r\n            state = {...state, ...newState};\r\n        }\r\n    } \r\n    catch (e) {\r\n        console.log(e);\r\n    }\r\n    \r\n}\r\n\r\nasync function test() {\r\n\r\n\r\n    let config_str = fs.readFileSync('./app/config.txt', 'utf8')\r\n    \r\n    client.startMiner(config_str);\r\n    //await main();\r\n}\r\n\r\n\r\ntest();\r\n\r\n\r\n\r\n\r\n\r\n"]}